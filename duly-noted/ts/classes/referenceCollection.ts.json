{"name":"./ts/classes/referenceCollection.ts","lines":[{"number":0,"longComment":true,"comment":" !ReferenceCollection/main"},{"number":1,"longComment":true,"comment":""},{"number":2,"longComment":true,"comment":""},{"number":3,"longComment":true,"comment":""},{"number":4,"longComment":true,"comment":""},{"number":5,"longComment":true,"comment":"This reference parser that parses all the links and anchors in your code - the output of which is two reference collections:"},{"number":6,"longComment":true,"comment":"* `internalReferences.json`"},{"number":7,"longComment":true,"comment":"* `externalReferences.json`"},{"number":8,"longComment":true,"comment":""},{"number":9,"code":"import {findWhere, findIndex} from \"underscore\";"},{"number":10,"code":"import log4js = require(\"log4js\");"},{"number":11,"code":"let logger = log4js.getLogger(\"duly-noted::ReferenceCollection\");"},{"number":12,"code":""},{"number":13,"longComment":true,"comment":""},{"number":14,"longComment":true,"comment":"## !interfaces/IReferenceCollection"},{"number":15,"longComment":true,"comment":""},{"number":16,"code":"export interface IReferenceCollection {"},{"number":17,"code":"    id: string;"},{"number":18,"code":"    anchors?: IAnchor[];"},{"number":19,"code":"    subcollections?: IReferenceCollection[];"},{"number":20,"code":"}"},{"number":21,"code":""},{"number":22,"longComment":true,"comment":""},{"number":23,"longComment":true,"comment":"## !interfaces/IAnchor"},{"number":24,"longComment":true,"comment":""},{"number":25,"code":"export interface IAnchor {"},{"number":26,"code":"    id: string;"},{"number":27,"code":"    file: string;"},{"number":28,"code":"    line: number;"},{"number":29,"code":"}"},{"number":30,"code":""},{"number":31,"longComment":true,"comment":""},{"number":32,"longComment":true,"comment":"## !interfaces/ITag"},{"number":33,"longComment":true,"comment":""},{"number":34,"code":"export interface ITag {"},{"number":35,"code":"    anchor: string;"},{"number":36,"code":"    path: string;"},{"number":37,"code":"    linkStub: string;"},{"number":38,"code":"}"},{"number":39,"code":""},{"number":40,"longComment":true,"comment":" !ReferenceCollection/class"},{"number":41,"longComment":true,"comment":"## Reference Collection Class"},{"number":42,"longComment":true,"comment":""},{"number":43,"code":"export class ReferenceCollection implements IReferenceCollection {"},{"number":44,"code":"    id: string;"},{"number":45,"code":"    anchors: IAnchor[];"},{"number":46,"code":"    subcollections: IReferenceCollection[];"},{"number":47,"code":"    logLevel: string;"},{"number":48,"code":""},{"number":49,"longComment":true,"comment":" !ReferenceCollection/constructor"},{"number":50,"longComment":true,"comment":"### Creates an instance of @ReferenceCollection/class"},{"number":51,"longComment":true,"comment":""},{"number":52,"code":"    constructor(id: string, logLevel?: string) {"},{"number":53,"code":"        this.logLevel = logLevel || \"DEBUG\";"},{"number":54,"code":"        logger.setLevel(logLevel);"},{"number":55,"code":"        this.id = id;"},{"number":56,"code":"        this.anchors = [];"},{"number":57,"code":"        this.subcollections = [];"},{"number":58,"code":"    }"},{"number":59,"code":""},{"number":60,"longComment":true,"comment":" !ReferenceCollection/inflate"},{"number":61,"longComment":true,"comment":"## Inflate"},{"number":62,"longComment":true,"comment":"Recursively inflate a reference collection in the form of @interfaces/IReferenceCollection from flat data (likely from JSON file)"},{"number":63,"longComment":true,"comment":""},{"number":64,"code":"    public inflate(collection: IReferenceCollection) {"},{"number":65,"code":"        this.id = collection.id;"},{"number":66,"code":"        this.anchors = collection.anchors;"},{"number":67,"code":"        for (let i = 0; i < collection.subcollections.length; i++) {"},{"number":68,"code":"            this.subcollections.push(new ReferenceCollection(collection.subcollections[i].id, this.logLevel).inflate(collection.subcollections[i]));"},{"number":69,"code":"        }"},{"number":70,"code":"        return this;"},{"number":71,"code":"    }"},{"number":72,"code":""},{"number":73,"longComment":true,"comment":" !ReferenceCollection/addAnchor"},{"number":74,"longComment":true,"comment":"## Add Anchor"},{"number":75,"longComment":true,"comment":"Add an @interfaces/IAnchor to collection"},{"number":76,"longComment":true,"comment":""},{"number":77,"code":"    public addAnchor(anchor: IAnchor): void {"},{"number":78,"code":"        let existing = findWhere(this.anchors, {id: anchor.id});"},{"number":79,"code":"        if (existing) {"},{"number":80,"code":"            logger.error(\"Cannot add anchor '\" + anchor.id + \"' from \" + anchor.file + \":\" + anchor.line + \" to '\" + this.id + \"' collection because it was already defined at \" + existing.file + \":\" + existing.line);"},{"number":81,"code":"        }"},{"number":82,"code":""},{"number":83,"code":"        this.anchors.push(anchor);"},{"number":84,"code":"    }"},{"number":85,"code":""},{"number":86,"longComment":true,"comment":" !ReferenceCollection/addSubcollection"},{"number":87,"longComment":true,"comment":"## Add Subcollection"},{"number":88,"longComment":true,"comment":"Add a subcollection to this collection in the form of an @interfaces/IReferenceCollection"},{"number":89,"longComment":true,"comment":""},{"number":90,"code":"    public addSubcollection(collection: IReferenceCollection): void {"},{"number":91,"code":"        let existingAnchor = findWhere(this.anchors, {id: collection.id});"},{"number":92,"code":"        if (existingAnchor) {"},{"number":93,"code":"            logger.error(\"Cannot add collection '\" + collection.id + \"' from: \" + collection.anchors[0].file + \" because it was already defined as an anchor \" + existingAnchor.file + \":\" + existingAnchor.line);"},{"number":94,"code":"            return;"},{"number":95,"code":"        }"},{"number":96,"code":""},{"number":97,"code":"        let existingCollection = findWhere(this.anchors, {id: collection.id});"},{"number":98,"code":"        if (existingCollection) {"},{"number":99,"code":"            logger.error(\"Cannot add collection '\" + collection.id + \"' from: \" + collection.anchors[0].file + \" because it was already defined as a subcollection of '\" + collection.id +  \"'\");"},{"number":100,"code":"            return;"},{"number":101,"code":"        }"},{"number":102,"code":""},{"number":103,"code":"        this.subcollections.push(collection);"},{"number":104,"code":"    }"},{"number":105,"code":""},{"number":106,"longComment":true,"comment":" !ReferenceCollection/addAnchorTag"},{"number":107,"longComment":true,"comment":"## Add Anchor Tag"},{"number":108,"longComment":true,"comment":"Add Anchor Tag to the appropriate subcollection by"},{"number":109,"longComment":true,"comment":"recursively skiming the collection and subcollections "},{"number":110,"longComment":true,"comment":"to place anchor in the correct place."},{"number":111,"longComment":true,"comment":""},{"number":112,"code":"    public addAnchorTag(anchorTag: string[], fileName: string, lineNumber: number): void {"},{"number":113,"code":"        logger.debug(\"processing new anchorTag: \" + JSON.stringify(anchorTag));"},{"number":114,"code":"        if (anchorTag.length === 1) {"},{"number":115,"code":"            logger.debug(\"Adding anchor tag:\" + anchorTag[0]);"},{"number":116,"code":"            this.addAnchor({"},{"number":117,"code":"                id: anchorTag[0],"},{"number":118,"code":"                line: lineNumber,"},{"number":119,"code":"                file: fileName"},{"number":120,"code":"            });"},{"number":121,"code":"            return;"},{"number":122,"code":"        } else {"},{"number":123,"code":"            let collectionTag = anchorTag.shift();"},{"number":124,"code":""},{"number":125,"code":"            let i = findIndex(this.subcollections, (item) => {"},{"number":126,"code":"                return item.id === collectionTag;"},{"number":127,"code":"            });"},{"number":128,"code":""},{"number":129,"code":"            if (i > -1) {"},{"number":130,"code":"            logger.debug(\"Collection present:\" + collectionTag);"},{"number":131,"code":""},{"number":132,"code":"            return this.subcollections[i].addAnchorTag(anchorTag, fileName, lineNumber);"},{"number":133,"code":"            } else {"},{"number":134,"code":"                logger.debug(\"Collection not present:\" + collectionTag);"},{"number":135,"code":"                let newSubCollection = new ReferenceCollection(collectionTag);"},{"number":136,"code":"                newSubCollection.addAnchorTag(anchorTag, fileName, lineNumber);"},{"number":137,"code":"                this.addSubcollection(newSubCollection);"},{"number":138,"code":"                return;"},{"number":139,"code":"            }"},{"number":140,"code":"        }"},{"number":141,"code":"    }"},{"number":142,"code":""},{"number":143,"longComment":true,"comment":" !ReferenceCollection/getAllTags"},{"number":144,"longComment":true,"comment":"## Get All Tags"},{"number":145,"longComment":true,"comment":"Get All the tags in a collection and its subcollections"},{"number":146,"longComment":true,"comment":"by recursively culling all of the tags."},{"number":147,"longComment":true,"comment":""},{"number":148,"code":"    public getAllTags(parentPath?: string, depth?: number): ITag[] {"},{"number":149,"code":"        parentPath = parentPath || \"\";"},{"number":150,"code":"        depth = depth || 0;"},{"number":151,"code":""},{"number":152,"code":"        let allTags: ITag[] = [];"},{"number":153,"code":"        if (depth > 0) {"},{"number":154,"code":""},{"number":155,"code":"            for (let i = 0; i < this.anchors.length; i++) {"},{"number":156,"code":"                if (parentPath !== \"\" && parentPath !== null) {"},{"number":157,"code":"                    allTags.push({"},{"number":158,"code":"                        anchor: parentPath + \"/\" + this.id + \"/\" + this.anchors[i].id,"},{"number":159,"code":"                        path: this.anchors[i].file,"},{"number":160,"code":"                        linkStub: this.anchors[i].id"},{"number":161,"code":"                    });"},{"number":162,"code":""},{"number":163,"code":"                    for (let i = 0; i < this.subcollections.length; i++) {"},{"number":164,"code":"                        allTags = allTags.concat(this.subcollections[i].getAllTags(parentPath + \"/\" + this.id,  depth + 1));"},{"number":165,"code":"                    }"},{"number":166,"code":"                } else {"},{"number":167,"code":"                    allTags.push({"},{"number":168,"code":"                        anchor: this.id + \"/\" + this.anchors[i].id,"},{"number":169,"code":"                        path: this.anchors[i].file,"},{"number":170,"code":"                        linkStub: this.anchors[i].id"},{"number":171,"code":"                    });"},{"number":172,"code":""},{"number":173,"code":"                    for (let i = 0; i < this.subcollections.length; i++) {"},{"number":174,"code":"                        allTags = allTags.concat(this.subcollections[i].getAllTags(this.id,  depth + 1));"},{"number":175,"code":"                    }"},{"number":176,"code":"                }"},{"number":177,"code":"            }"},{"number":178,"code":"        } else {"},{"number":179,"code":""},{"number":180,"code":"            for (let i = 0; i < this.anchors.length; i++) {"},{"number":181,"code":"                allTags.push({"},{"number":182,"code":"                    anchor: this.anchors[i].id,"},{"number":183,"code":"                    path: this.anchors[i].file,"},{"number":184,"code":"                    linkStub: this.anchors[i].id"},{"number":185,"code":"                });"},{"number":186,"code":"            }"},{"number":187,"code":""},{"number":188,"code":"            for (let i = 0; i < this.subcollections.length; i++) {"},{"number":189,"code":"                allTags = allTags.concat(this.subcollections[i].getAllTags(null, depth + 1));"},{"number":190,"code":"            }"},{"number":191,"code":"        }"},{"number":192,"code":""},{"number":193,"code":"        return allTags;"},{"number":194,"code":"    }"},{"number":195,"code":""},{"number":196,"longComment":true,"comment":" !ReferenceCollection/getTagsByCollection"},{"number":197,"longComment":true,"comment":"## Get Tags By Collection"},{"number":198,"longComment":true,"comment":"Get a list of anchors sorted by an array of all the collections."},{"number":199,"longComment":true,"comment":""},{"number":200,"code":"    public getTagsByCollection (allCollections?, parentPath?) {"},{"number":201,"code":"        allCollections = allCollections || [];"},{"number":202,"code":"        parentPath = parentPath || \"\";"},{"number":203,"code":"        let id = parentPath + \"/\" + this.id;"},{"number":204,"code":""},{"number":205,"code":"        allCollections.push({"},{"number":206,"code":"            name: id,"},{"number":207,"code":"            anchors: []"},{"number":208,"code":"        });"},{"number":209,"code":""},{"number":210,"code":"        for (let i = 0; i < this.anchors.length; i++) {"},{"number":211,"code":"            allCollections[allCollections.length - 1].anchors.push({"},{"number":212,"code":"                anchor: this.anchors[i].id,"},{"number":213,"code":"                path: this.anchors[i].file,"},{"number":214,"code":"                linkStub: this.anchors[i].id"},{"number":215,"code":"            });"},{"number":216,"code":"        }"},{"number":217,"code":""},{"number":218,"code":"        for (let i = 0; i < this.subcollections.length; i++) {"},{"number":219,"code":"            allCollections = this.subcollections[i].getTagsByCollection(allCollections, id);"},{"number":220,"code":"        }"},{"number":221,"code":""},{"number":222,"code":"        return allCollections;"},{"number":223,"code":"    }"},{"number":224,"code":"}"}],"type":"typescript"}