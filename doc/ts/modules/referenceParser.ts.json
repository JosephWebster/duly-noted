{"name":"./ts/modules/referenceParser.ts","lines":[{"number":0,"code":"import {IReferenceCollection, IAnchor, ReferenceCollection} from \"../classes/referenceCollection\";"},{"number":1,"code":"import {IFile, ILine} from \"../classes/IFile\";"},{"number":2,"code":"import {writeFileSync, mkdirSync, accessSync, F_OK, openSync} from \"fs\";"},{"number":3,"code":"import mkdirp = require(\"mkdirp\");"},{"number":4,"code":"import * as path from \"path\";"},{"number":5,"code":"import XRegExp = require(\"xregexp\");"},{"number":6,"code":"import lineReader = require(\"line-reader\");"},{"number":7,"code":"import Q = require(\"q\");"},{"number":8,"code":"import {doInOrder, doNext} from \"../helpers/helpers\";"},{"number":9,"code":""},{"number":10,"code":"import log4js = require(\"log4js\");"},{"number":11,"code":"let logger = log4js.getLogger(\"duly-noted::ReferenceParser\");"},{"number":12,"code":""},{"number":13,"code":"export interface IReferenceParser {"},{"number":14,"code":"    files: string[];"},{"number":15,"code":"    parse(): any;"},{"number":16,"code":"}"},{"number":17,"code":""},{"number":18,"code":"export class ReferenceParser implements IReferenceParser {"},{"number":19,"code":"    files: string[];"},{"number":20,"code":"    file: IFile;"},{"number":21,"code":"    rootCollection: IReferenceCollection;"},{"number":22,"code":"    anchorRegExp: RegExp;"},{"number":23,"code":"    commentRegExp: RegExp;"},{"number":24,"code":"    longCommentOpenRegExp: RegExp;"},{"number":25,"code":"    longCommentCloseRegExp: RegExp;"},{"number":26,"code":"    outputDir: string;"},{"number":27,"code":""},{"number":28,"code":"    constructor(files: string[],"},{"number":29,"code":"                commentRegExp: RegExp,"},{"number":30,"code":"                anchorRegExp: RegExp,"},{"number":31,"code":"                longCommentOpenRegExp: RegExp,"},{"number":32,"code":"                longCommentCloseRegExp: RegExp,"},{"number":33,"code":"                outputDir: string) {"},{"number":34,"code":"        logger.debug(\"ready\");"},{"number":35,"code":"        this.outputDir = outputDir;"},{"number":36,"code":"        this.files = files;"},{"number":37,"code":"        this.rootCollection = new ReferenceCollection(\"root\");"},{"number":38,"code":"        this.anchorRegExp = anchorRegExp;"},{"number":39,"code":"        this.commentRegExp = commentRegExp;"},{"number":40,"code":"        this.longCommentOpenRegExp = longCommentOpenRegExp;"},{"number":41,"code":"        this.longCommentCloseRegExp = longCommentCloseRegExp;"},{"number":42,"code":"    }"},{"number":43,"code":""},{"number":44,"code":"    public parse(): Q.Promise<IReferenceCollection> {"},{"number":45,"code":"        let that = this;"},{"number":46,"code":"        return Q.Promise<IReferenceCollection>((resolve, reject) => {"},{"number":47,"code":"            logger.info(\"Starting parse actions for \" + that.files.length + \"files.\");"},{"number":48,"code":""},{"number":49,"code":"            let parseActions = [];"},{"number":50,"code":""},{"number":51,"code":"            for (let i = 0; i < that.files.length; i++) {"},{"number":52,"code":"                 parseActions.push(that.parseFile(that.files[i]));"},{"number":53,"code":"            }"},{"number":54,"code":""},{"number":55,"code":"            Q.all(parseActions)"},{"number":56,"code":"            .then(() => {"},{"number":57,"code":"                resolve(that.rootCollection);"},{"number":58,"code":"            });"},{"number":59,"code":"       });"},{"number":60,"code":"    }"},{"number":61,"code":""},{"number":62,"code":"    parseFile(fileName: string): Q.Promise<{}> {"},{"number":63,"code":"        let that = this;"},{"number":64,"code":"        let insideLongComment = false;"},{"number":65,"code":"        return Q.Promise((resolve, reject) => {"},{"number":66,"comment":"// read all lines:","code":"           "},{"number":67,"code":"            logger.info(\"Working on file: \" + fileName);"},{"number":68,"code":"            that.file = {"},{"number":69,"code":"                name: fileName,"},{"number":70,"code":"                lines: [],"},{"number":71,"code":"                type: \"notSure\""},{"number":72,"code":"            };"},{"number":73,"code":""},{"number":74,"comment":"// Line numbering traditionally starts at 1","code":"            let lineNumber = 0;"},{"number":75,"code":"            lineReader.eachLine(fileName, (line, last) => {"},{"number":76,"code":"                logger.info(\"Parsing line: \" + lineNumber);"},{"number":77,"code":""},{"number":78,"code":"                let thisLine: ILine = {"},{"number":79,"code":"                    number: lineNumber"},{"number":80,"code":"                };"},{"number":81,"code":"                that.file.lines.push(thisLine);"},{"number":82,"code":""},{"number":83,"code":"                let longCommentStart = line.search(that.longCommentOpenRegExp);"},{"number":84,"code":""},{"number":85,"comment":"// These comments must come at beginning of line.","code":"                if (!insideLongComment && longCommentStart === 0) {"},{"number":86,"code":"                    insideLongComment = true;"},{"number":87,"code":"                    that.file.lines[lineNumber].longComment = true;"},{"number":88,"code":"                }"},{"number":89,"code":""},{"number":90,"comment":"// Not inside a long comment - look for a regular comment.","code":"               "},{"number":91,"code":"                if (!insideLongComment) {"},{"number":92,"code":"                    let commentStart = line.search(that.commentRegExp);"},{"number":93,"code":""},{"number":94,"comment":"// Contains a tradition comment","code":"                   "},{"number":95,"code":"                    if (commentStart > -1) {"},{"number":96,"code":""},{"number":97,"code":"                        that.file.lines[lineNumber].comment = line.substr(commentStart);"},{"number":98,"code":"                        that.file.lines[lineNumber].code = line.substr(0, commentStart - 1);"},{"number":99,"code":""},{"number":100,"code":"                        that.parseComment(line.substr(commentStart), fileName, lineNumber)"},{"number":101,"code":"                        .then(() => {"},{"number":102,"code":"                            if (last) {"},{"number":103,"code":"                                that.writeOutFile()"},{"number":104,"code":"                                .then(() => {"},{"number":105,"code":"                                    resolve(null);"},{"number":106,"code":"                                    return false;"},{"number":107,"code":"                                })"},{"number":108,"code":"                                .catch((err) => {"},{"number":109,"code":"                                    logger.fatal(err.message);"},{"number":110,"code":"                                });"},{"number":111,"code":"                            }"},{"number":112,"code":"                        });"},{"number":113,"comment":"// Not a comment (code only)","code":"                   "},{"number":114,"code":"                    } else {"},{"number":115,"code":"                        that.file.lines[lineNumber].code = line;"},{"number":116,"code":"                        if (last) {"},{"number":117,"code":"                            that.writeOutFile()"},{"number":118,"code":"                            .then(() => {"},{"number":119,"code":"                                resolve(null);"},{"number":120,"code":"                                return false;"},{"number":121,"code":"                            })"},{"number":122,"code":"                            .catch((err) => {"},{"number":123,"code":"                                logger.fatal(err.message);"},{"number":124,"code":"                            });"},{"number":125,"code":"                        }"},{"number":126,"code":"                    }"},{"number":127,"comment":"// Inside a long comment - so the whole thing is a comment","code":"                } else {"},{"number":128,"code":"                    that.file.lines[lineNumber].comment = line;"},{"number":129,"code":"                    that.parseComment(line, fileName, lineNumber)"},{"number":130,"code":"                    .then(() => {"},{"number":131,"code":"                        if (last) {"},{"number":132,"code":"                            that.writeOutFile()"},{"number":133,"code":"                            .then(() => {"},{"number":134,"code":"                                resolve(null);"},{"number":135,"code":"                                return false;"},{"number":136,"code":"                            })"},{"number":137,"code":"                            .catch((err) => {"},{"number":138,"code":"                                logger.fatal(err.message);"},{"number":139,"code":"                            });"},{"number":140,"code":"                        }"},{"number":141,"code":"                    });"},{"number":142,"code":"                }"},{"number":143,"code":""},{"number":144,"comment":"// If this line contains a long comment closing symbol, then next line isn't long comment.","code":"               "},{"number":145,"code":"                if (insideLongComment) {"},{"number":146,"code":"                    let longCommentEnd = line.search(that.longCommentCloseRegExp);"},{"number":147,"code":"                    if (longCommentEnd > -1) {"},{"number":148,"code":"                        insideLongComment = false;"},{"number":149,"code":"                    }"},{"number":150,"code":"                }"},{"number":151,"code":""},{"number":152,"code":"                lineNumber++;"},{"number":153,"code":"            });"},{"number":154,"code":"        });"},{"number":155,"code":"    }"},{"number":156,"code":""},{"number":157,"code":"    writeOutFile() {"},{"number":158,"code":"        let that = this;"},{"number":159,"code":"        return Q.Promise<{}>((resolve, reject) => {"},{"number":160,"code":"            logger.info(\"Saving output for: \" + that.file.name);"},{"number":161,"code":"            let filePathArray = path.join(that.outputDir, that.file.name + \".json\").split(\"/\");"},{"number":162,"code":"            filePathArray.pop();"},{"number":163,"code":"            let filePath = filePathArray.join(\"/\");"},{"number":164,"code":"            mkdirp(filePath, function (err) {"},{"number":165,"code":"                if (err) {"},{"number":166,"code":"                    logger.fatal(err.message);"},{"number":167,"code":"                    reject(err);"},{"number":168,"code":"                }"},{"number":169,"code":"                else {"},{"number":170,"code":"                    writeFileSync(path.join(that.outputDir, that.file.name + \".json\"), JSON.stringify(that.file), {flag: \"w\"});"},{"number":171,"code":"                    resolve(null);"},{"number":172,"code":"                }"},{"number":173,"code":"            });"},{"number":174,"code":"        });"},{"number":175,"code":"    }"},{"number":176,"code":""},{"number":177,"code":"    parseLine(line: string, fileName: string, lineNumber: number, insideLongComment: boolean): Q.Promise<{}> {"},{"number":178,"code":"        let that = this;"},{"number":179,"code":"        return Q.Promise<string[]>((resolve, reject) => {"},{"number":180,"code":"            let commentStart = line.search(that.commentRegExp);"},{"number":181,"code":"        });"},{"number":182,"code":"    }"},{"number":183,"code":""},{"number":184,"code":"    parseComment(comment: string, fileName: string, lineNumber: number): Q.Promise<{}> {"},{"number":185,"code":"        let that = this;"},{"number":186,"code":"        return Q.Promise<{}>((resolve, reject) => {"},{"number":187,"code":"            let pos = 0;"},{"number":188,"code":"            let match;"},{"number":189,"code":""},{"number":190,"code":"            while (match = XRegExp.exec(comment, that.anchorRegExp, pos, false)) {"},{"number":191,"code":"                logger.debug(\"found anchor: \" + match[1]);"},{"number":192,"code":""},{"number":193,"code":"                let parts = match[1].split(\"/\");"},{"number":194,"code":""},{"number":195,"code":"                that.rootCollection.addAnchorTag(parts, fileName, lineNumber);"},{"number":196,"code":"                resolve(null);"},{"number":197,"code":"                pos = match.index + match[0].length;"},{"number":198,"code":"            }"},{"number":199,"code":"            resolve(null);"},{"number":200,"code":"        });"},{"number":201,"code":"    };"},{"number":202,"code":"}"}],"type":"notSure"}