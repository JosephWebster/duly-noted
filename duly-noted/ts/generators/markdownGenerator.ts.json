{"name":"./ts/generators/markdownGenerator.ts","lines":[{"number":0,"code":"import {IReferenceCollection, IAnchor, ITag, ReferenceCollection} from \"../classes/referenceCollection\";"},{"number":1,"code":"import {parseLoc} from \"../modules/referenceParser\";"},{"number":2,"code":"import {IConfig, IExternalReference} from \"../classes/IConfig\";"},{"number":3,"code":"import {readFiles, files} from \"node-dir\";"},{"number":4,"code":"import {IFile, ILine} from \"../classes/IFile\";"},{"number":5,"code":"import XRegExp = require(\"xregexp\");"},{"number":6,"code":"import {writeFileSync, mkdirSync, accessSync, F_OK, unlinkSync, readFileSync} from \"fs\";"},{"number":7,"code":"import mkdirp = require(\"mkdirp\");"},{"number":8,"code":"import * as path from \"path\";"},{"number":9,"code":"import _ = require(\"underscore\");"},{"number":10,"code":"import lineReader = require(\"line-reader\");"},{"number":11,"code":""},{"number":12,"code":""},{"number":13,"code":"import log4js = require(\"log4js\");"},{"number":14,"code":"let logger = log4js.getLogger(\"duly-noted::MarkdownGenerator\");"},{"number":15,"code":""},{"number":16,"code":""},{"number":17,"code":"export interface IMarkdownGenerator {"},{"number":18,"code":"    generate(): void;"},{"number":19,"code":"}"},{"number":20,"code":""},{"number":21,"code":"export class MarkdownGenerator implements IMarkdownGenerator {"},{"number":22,"code":"    outputDir: string;"},{"number":23,"code":"    externalReferences: IExternalReference[];"},{"number":24,"code":"    anchorRegExp: RegExp;"},{"number":25,"code":"    linkRegExp: RegExp;"},{"number":26,"code":"    referenceCollection: ReferenceCollection;"},{"number":27,"code":"    tags: ITag[] = [];"},{"number":28,"code":"    readme: string;"},{"number":29,"code":"    projectName: string;"},{"number":30,"code":"    outputFiles: string[] = [];"},{"number":31,"code":""},{"number":32,"code":"    constructor(config: IConfig) {"},{"number":33,"code":"        this.outputDir = config.outputDir;"},{"number":34,"code":"        this.externalReferences = JSON.parse(readFileSync(path.join(parseLoc, \"externalReferences.json\")).toString());"},{"number":35,"code":"        this.anchorRegExp = new RegExp(config.anchorRegExp);"},{"number":36,"code":"        this.linkRegExp = new RegExp(config.linkRegExp);"},{"number":37,"code":"        this.referenceCollection = new ReferenceCollection(\"\").inflate(JSON.parse(readFileSync(path.join(parseLoc, \"internalReferences.json\")).toString()));"},{"number":38,"code":"        this.tags = this.referenceCollection.getAllTags();"},{"number":39,"code":"        this.readme = config.readme;"},{"number":40,"code":"        this.projectName = config.projectName;"},{"number":41,"code":"    }"},{"number":42,"code":""},{"number":43,"code":"    public generate(cleanUp?: boolean): void {"},{"number":44,"code":"        let that = this;"},{"number":45,"code":"        let clean = cleanUp || false;"},{"number":46,"code":"        this.outputFiles = [];"},{"number":47,"code":"        readFiles(parseLoc, {match: /.json$/, exclude: /internalReferences.json|externalReferences.json/, recursive: true}, (err, content, next) => {"},{"number":48,"code":"            that.proccessFile(err, content, next, that.outputDir);"},{"number":49,"code":"        }, (err, files) => {"},{"number":50,"code":"            let readme = \"\";"},{"number":51,"code":"            let i = 1;"},{"number":52,"code":"            lineReader.eachLine(that.readme, (line, last) => {"},{"number":53,"code":"                let newLine = line;"},{"number":54,"code":"                newLine = that.replaceExternalLinks(newLine, that.readme, i);"},{"number":55,"code":"                newLine = that.replaceInternalLinks(newLine, that.readme, i);"},{"number":56,"code":"                readme +=  \"\\n\" + newLine;"},{"number":57,"code":"                i++;"},{"number":58,"code":"            }, () => {"},{"number":59,"code":"                that.generateIndexPage(readme);"},{"number":60,"code":"            });"},{"number":61,"code":"        });"},{"number":62,"code":"    }"},{"number":63,"code":""},{"number":64,"code":"    proccessFile(err: Error, content: string, next: Function, outputDir: string): void {"},{"number":65,"code":"        let file: IFile = JSON.parse(content);"},{"number":66,"code":"        let that = this;"},{"number":67,"code":"        logger.info(\"Processing \" + file.name);"},{"number":68,"code":""},{"number":69,"code":"        if (err) {"},{"number":70,"code":"            logger.error(err.message);"},{"number":71,"code":"        } else {"},{"number":72,"code":"            let file: IFile = JSON.parse(content);"},{"number":73,"code":"            let output: string = \"\";"},{"number":74,"code":"            let inCodeBlock = false;"},{"number":75,"code":""},{"number":76,"code":"            for (let i = 0; i < file.lines.length; i++) {"},{"number":77,"code":"                if (typeof(file.lines[i].comment) === \"string\" && file.lines[i].comment !== \"\" && file.lines[i].comment !== null) {"},{"number":78,"code":"                    file.lines[i].comment = this.replaceAnchors(file.lines[i].comment, file.name, i);"},{"number":79,"code":"                    file.lines[i].comment = this.replaceExternalLinks(file.lines[i].comment, file.name, i);"},{"number":80,"code":"                    file.lines[i].comment = this.replaceInternalLinks(file.lines[i].comment, file.name, i);"},{"number":81,"code":"                }"},{"number":82,"code":"            }"},{"number":83,"code":""},{"number":84,"code":"            for (let i = 0; i < file.lines.length; i++) {"},{"number":85,"code":""},{"number":86,"comment":" Comment","code":"               "},{"number":87,"code":"                if (typeof(file.lines[i].comment) === \"string\" && file.lines[i].comment !== \"\" && file.lines[i].comment !== null) {"},{"number":88,"code":"                    if (inCodeBlock) {"},{"number":89,"comment":" Close the current block of code. ","code":"                        output += \"```\" + \"\\n\";"},{"number":90,"code":"                        inCodeBlock = false;"},{"number":91,"code":"                    }"},{"number":92,"code":""},{"number":93,"code":"                    output += file.lines[i].comment + \"\\n\" + \"\\n\";"},{"number":94,"code":"                }"},{"number":95,"code":""},{"number":96,"comment":" Code","code":"               "},{"number":97,"code":"                if (typeof(file.lines[i].code) === \"string\" && file.lines[i].code !== \"\" && file.lines[i].code !== null) {"},{"number":98,"code":"                    if (!inCodeBlock) {"},{"number":99,"comment":" Open new code block. ","code":"                        output += \"```\" + file.type +  \"\\n\";"},{"number":100,"code":"                        inCodeBlock = true;"},{"number":101,"code":"                    }"},{"number":102,"code":"                    output += file.lines[i].code + \"\\n\";"},{"number":103,"code":"                }"},{"number":104,"code":"            }"},{"number":105,"code":""},{"number":106,"code":"            if (inCodeBlock) {"},{"number":107,"comment":" Close the current block of code. ","code":"                output += \"```\" + \"\\n\";"},{"number":108,"code":"                inCodeBlock = false;"},{"number":109,"code":"            }"},{"number":110,"code":""},{"number":111,"code":"            let filePathArray = path.join(outputDir, file.name + \".md\").split(\"/\");"},{"number":112,"code":"            filePathArray.pop();"},{"number":113,"code":"            let filePath = filePathArray.join(\"/\");"},{"number":114,"code":""},{"number":115,"code":"            mkdirp(filePath, function (err) {"},{"number":116,"code":"                if (err) {"},{"number":117,"code":"                    logger.fatal(err.message);"},{"number":118,"code":"                }"},{"number":119,"code":"                else {"},{"number":120,"code":"                    logger.info(\"Saving output for \" + file.type + \" file \" + file.name);"},{"number":121,"code":"                    let fileName = path.join(outputDir, file.name + \".md\");"},{"number":122,"code":"                    that.outputFiles.push(fileName);"},{"number":123,"code":"                    writeFileSync(fileName, output, { flag: \"w\" });"},{"number":124,"code":"                }"},{"number":125,"code":"            });"},{"number":126,"code":""},{"number":127,"code":"            next();"},{"number":128,"code":"        }"},{"number":129,"code":"    }"},{"number":130,"code":""},{"number":131,"code":""},{"number":132,"code":"    replaceAnchors(comment: string,  fileName: string, line: number) {"},{"number":133,"code":"        let pos = 0;"},{"number":134,"code":"        let match;"},{"number":135,"code":"        let newComment: string = comment;"},{"number":136,"comment":" Look at the line for anchors - replace them with links. ","code":"       "},{"number":137,"code":"        while (match = XRegExp.exec(newComment, this.anchorRegExp, pos, false)) {"},{"number":138,"code":"            newComment =  newComment.substr(0, match.index) +"},{"number":139,"code":"            \"[\" + match[1] + \"](#\" + match[1] + \")\" +"},{"number":140,"code":"            newComment.substr(match.index + match[0].length);"},{"number":141,"code":""},{"number":142,"code":"            pos = match.index + match[0].length;"},{"number":143,"code":"        }"},{"number":144,"code":""},{"number":145,"code":"        return newComment;"},{"number":146,"code":"    }"},{"number":147,"code":""},{"number":148,"code":"    replaceInternalLinks(comment: string, fileName: string, line: number) {"},{"number":149,"code":"        let pos = 0;"},{"number":150,"code":"        let match;"},{"number":151,"code":"        let newComment: string = comment;"},{"number":152,"code":""},{"number":153,"code":"        let linkPrefix = this.getLinkPrefix(fileName);"},{"number":154,"code":""},{"number":155,"comment":" Look at the line for anchors - replace them with links. ","code":"       "},{"number":156,"code":"        while (match = XRegExp.exec(newComment, this.linkRegExp, pos, false)) {"},{"number":157,"code":"            let tag =  _.findWhere(this.tags, {anchor: match[1]});"},{"number":158,"code":"            if (!tag) {"},{"number":159,"code":"                logger.error(\"link: \" + match[1] + \" in \" + fileName + \":\" + line + \" does not have a cooresponding anchor, so link cannot be created.\");"},{"number":160,"code":"            } else {"},{"number":161,"code":"                logger.debug(\"found internal link: \" + match[1]);"},{"number":162,"code":"                newComment =  comment.substr(0, match.index) +"},{"number":163,"code":"                \" [\" + match[1] + \"](\" + linkPrefix + tag.path + \".md#\" + match[1] + \") \" +"},{"number":164,"code":"                newComment.substr(match.index + match[0].length);"},{"number":165,"code":"            }"},{"number":166,"code":"            pos = match.index + match[0].length;"},{"number":167,"code":"        }"},{"number":168,"code":""},{"number":169,"code":"        return newComment;"},{"number":170,"code":"    }"},{"number":171,"code":""},{"number":172,"code":"    replaceExternalLinks(comment: string, fileName: string, line: number) {"},{"number":173,"code":"        let pos = 0;"},{"number":174,"code":"        let match;"},{"number":175,"code":"        let newComment: string = comment;"},{"number":176,"code":""},{"number":177,"comment":" Look at the line for external references - replace them with links. ","code":"       "},{"number":178,"code":"        while (match = XRegExp.exec(newComment, this.linkRegExp, pos, false)) {"},{"number":179,"code":"            let tagArray = match[1].split(\"/\");"},{"number":180,"code":"            let tag =  _.findWhere(this.externalReferences, {anchor: tagArray[0]});"},{"number":181,"code":""},{"number":182,"code":"            if (tag) {"},{"number":183,"code":"                logger.debug(\"found external link: \" + match[1]);"},{"number":184,"code":"                for (let i = 1; i < tagArray.length; i++) {"},{"number":185,"code":"                    tag.path = tag.path.replace(\"::\", tagArray[i]);"},{"number":186,"code":"                }"},{"number":187,"code":""},{"number":188,"code":"                newComment =  comment.substr(0, match.index - 1) +"},{"number":189,"code":"                \" [\" + match[1] + \"](\" + tag.path + \") \" +"},{"number":190,"code":"                newComment.substr(match.index + match[0].length);"},{"number":191,"code":"            }"},{"number":192,"code":""},{"number":193,"code":"            pos = match.index + match[0].length;"},{"number":194,"code":"        }"},{"number":195,"code":"        return newComment;"},{"number":196,"code":"    }"},{"number":197,"code":""},{"number":198,"code":"    generateIndexPage(readmeText?): void {"},{"number":199,"code":"        logger.info(\"generating Duly Noted.md\");"},{"number":200,"code":"        let that = this;"},{"number":201,"code":""},{"number":202,"code":"        let outputMap = {"},{"number":203,"code":"            project: this.projectName,"},{"number":204,"code":"            collections: [],"},{"number":205,"code":"            files: this.outputFiles,"},{"number":206,"code":"            readme: readmeText"},{"number":207,"code":"        };"},{"number":208,"code":""},{"number":209,"comment":" collections","code":"       "},{"number":210,"code":"        let collections = that.referenceCollection.getTagsByCollection();"},{"number":211,"code":""},{"number":212,"code":"        for (let i = 0; i < collections.length; i++) {"},{"number":213,"code":"            let anchors = _.clone(collections[i].anchors);"},{"number":214,"code":"            for (let x = 0; x < anchors.length; x++) {"},{"number":215,"code":"                let linkPrefix = that.getLinkPrefix(anchors[x].path);"},{"number":216,"code":"                anchors[x].path = anchors[x].path + \".md#\" + anchors[x].linkStub;"},{"number":217,"code":"            }"},{"number":218,"code":""},{"number":219,"code":"            let name = collections[i].name.split(\"/\");"},{"number":220,"code":"            name.shift();"},{"number":221,"code":"            name.shift();"},{"number":222,"code":"            name = name.join(\"/\");"},{"number":223,"code":"            outputMap.collections.push({"},{"number":224,"code":"                name: name,"},{"number":225,"code":"                anchors: anchors"},{"number":226,"code":"            });"},{"number":227,"code":"        }"},{"number":228,"code":""},{"number":229,"code":"        let md = \"# \" + this.projectName + \" documentation \\n\";"},{"number":230,"code":""},{"number":231,"code":"        md += \"### Collections \\n\";"},{"number":232,"code":"        for (let i = 0; i < outputMap.collections.length; i++) {"},{"number":233,"code":"           md += \"\\n#### \" + outputMap.collections[i].name + \" \\n\";"},{"number":234,"code":""},{"number":235,"code":"           for (let x = 0; x < outputMap.collections[i].anchors.length; x++) {"},{"number":236,"code":"               md += \"* [\" + outputMap.collections[i].anchors[x].anchor + \"]\" + \"(\" + outputMap.collections[i].anchors[x].path + \") \\n\";"},{"number":237,"code":"           }"},{"number":238,"code":"        }"},{"number":239,"code":""},{"number":240,"code":"        md += \"\\n------------------------------ \\n\";"},{"number":241,"code":"        md += \"\\n### Files \\n\";"},{"number":242,"code":""},{"number":243,"code":"        for (let i = 0; i < outputMap.files.length; i++) {"},{"number":244,"code":"            md += \"* [\" + outputMap.files[i] + \"](\" + outputMap.files[i] + \") \\n\";"},{"number":245,"code":"        }"},{"number":246,"code":"        md += \"\\n------------------------------ \\n\";"},{"number":247,"code":""},{"number":248,"code":"        md += outputMap.readme;"},{"number":249,"code":""},{"number":250,"code":"        writeFileSync(path.join(that.outputDir, \"Duly Noted.md\"), md, { flag: \"w\" });"},{"number":251,"code":"    }"},{"number":252,"code":""},{"number":253,"comment":" > NOTE: Without this code, the link will not properly navigated deeply nested pages with relative linking.","code":"   "},{"number":254,"code":"    getLinkPrefix(fileName: string): string {"},{"number":255,"code":"        let fileNameAsArray = fileName.split(\"/\");"},{"number":256,"code":"        let linkPrefix = \"\";"},{"number":257,"code":"        for (let i = 0; i < fileNameAsArray.length - 2; i++) {"},{"number":258,"code":"            linkPrefix += \"../\";"},{"number":259,"code":"        }"},{"number":260,"code":""},{"number":261,"code":"        return linkPrefix;"},{"number":262,"code":"    }"},{"number":263,"code":""},{"number":264,"code":"    cleanUp(err, files) {"},{"number":265,"code":"        if (err) {"},{"number":266,"code":"            logger.error(err.message);"},{"number":267,"code":"        } else {"},{"number":268,"code":"            for (let i = 0; i < files.length; i++) {"},{"number":269,"code":"                unlinkSync(files[i]);"},{"number":270,"code":"            }"},{"number":271,"code":"        }"},{"number":272,"code":"    }"},{"number":273,"code":"}"},{"number":274,"code":""}],"type":"typescript"}