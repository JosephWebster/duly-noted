{"name":"./ts/generators/htmlGenerator.ts","lines":[{"number":0,"longComment":true,"comment":" !HtmlGenerator/main"},{"number":1,"longComment":true,"comment":"# HtmlGenerator"},{"number":2,"longComment":true,"comment":"@authors/chris"},{"number":3,"longComment":true,"comment":"@license"},{"number":4,"longComment":true,"comment":""},{"number":5,"longComment":true,"comment":"Generates HTML pages for the source code, "},{"number":6,"longComment":true,"comment":"replacing links and anchors as it goes along. "},{"number":7,"longComment":true,"comment":"Builds a nice Index.html page with info and "},{"number":8,"longComment":true,"comment":"README.md content. "},{"number":9,"longComment":true,"comment":""},{"number":10,"longComment":true,"comment":"This is a generator that takes the reference maps produced by"},{"number":11,"longComment":true,"comment":"@ReferenceParser/parse and turns them into nice markdown documentation files."},{"number":12,"longComment":true,"comment":""},{"number":13,"longComment":true,"comment":"> Note this Uses tempalates that employ handlebars as the "},{"number":14,"longComment":true,"comment":"templating engine."},{"number":15,"longComment":true,"comment":""},{"number":16,"longComment":true,"comment":""},{"number":17,"code":""},{"number":18,"code":"import {IAnchor, ITag, ReferenceCollection} from \"../classes/referenceCollection\";"},{"number":19,"code":"import {parseLoc} from \"../modules/referenceParser\";"},{"number":20,"code":"import {IConfig, IExternalReference} from \"../classes/IConfig\";"},{"number":21,"code":"import {readFiles, files} from \"node-dir\";"},{"number":22,"code":"import {IFile, ILine} from \"../classes/IFile\";"},{"number":23,"code":"import {writeFileSync, mkdirSync, accessSync, F_OK, unlinkSync, readFileSync} from \"fs\";"},{"number":24,"code":"import mkdirp = require(\"mkdirp\");"},{"number":25,"code":"import * as path from \"path\";"},{"number":26,"code":"import XRegExp = require(\"xregexp\");"},{"number":27,"code":"import * as handlebars from \"handlebars\";"},{"number":28,"code":"import * as marked from \"marked\";"},{"number":29,"code":"import * as fse from \"fs-extra\";"},{"number":30,"code":"import _ = require(\"underscore\");"},{"number":31,"code":"import Q = require(\"q\");"},{"number":32,"code":"import log4js = require(\"log4js\");"},{"number":33,"code":"let logger = log4js.getLogger(\"duly-noted::HtmlGenerator\");"},{"number":34,"code":""},{"number":35,"longComment":true,"comment":""},{"number":36,"longComment":true,"comment":"!interfaces/IHtmlGenerator"},{"number":37,"longComment":true,"comment":""},{"number":38,"code":"export interface IHtmlGenerator {"},{"number":39,"code":""},{"number":40,"code":"}"},{"number":41,"code":""},{"number":42,"longComment":true,"comment":" !HtmlGenerator/class"},{"number":43,"longComment":true,"comment":"## Html Generator Class"},{"number":44,"longComment":true,"comment":""},{"number":45,"code":"export class HtmlGenerator implements IHtmlGenerator {"},{"number":46,"code":"    outputDir: string;"},{"number":47,"code":"    collection: ReferenceCollection;"},{"number":48,"code":"    anchorRegExp: RegExp;"},{"number":49,"code":"    linkRegExp: RegExp;"},{"number":50,"code":"    template: any;"},{"number":51,"code":"    indexTemplate: any;"},{"number":52,"code":"    projectPath: string;"},{"number":53,"code":"    referenceCollection: ReferenceCollection;"},{"number":54,"code":"    tags: ITag[] = [];"},{"number":55,"code":"    externalReferences: IExternalReference[];"},{"number":56,"code":"    readme: string;"},{"number":57,"code":"    projectName: string;"},{"number":58,"code":""},{"number":59,"longComment":true,"comment":" !HtmlGenerator/constructor"},{"number":60,"longComment":true,"comment":"### Creates an instance of @HtmlGenerator/class"},{"number":61,"longComment":true,"comment":""},{"number":62,"code":"    constructor(config: IConfig, logLevel?: string) {"},{"number":63,"code":"        logger.setLevel(logLevel || \"DEBUG\");"},{"number":64,"code":"        this.outputDir = config.outputDir;"},{"number":65,"code":"        this.collection = JSON.parse(readFileSync(path.join(parseLoc, \"internalReferences.json\")).toString());"},{"number":66,"code":"        this.anchorRegExp = new RegExp(config.anchorRegExp);"},{"number":67,"code":"        this.linkRegExp = new RegExp(config.linkRegExp);"},{"number":68,"code":"        this.referenceCollection = new ReferenceCollection(\"\").inflate(JSON.parse(readFileSync(path.join(parseLoc, \"internalReferences.json\")).toString()));"},{"number":69,"code":"        this.externalReferences = JSON.parse(readFileSync(path.join(parseLoc, \"externalReferences.json\")).toString());"},{"number":70,"code":"        this.tags = this.referenceCollection.getAllTags();"},{"number":71,"code":"        let projectPathArray = __dirname.split(\"/\");"},{"number":72,"code":"        projectPathArray.pop();"},{"number":73,"code":"        this.projectPath = projectPathArray.join(\"/\");"},{"number":74,"code":""},{"number":75,"code":"        this.template = handlebars.compile(readFileSync(path.join(__dirname, \"../../bin/templates\", \"stacked.html\")).toString());"},{"number":76,"code":"        this.indexTemplate = handlebars.compile(readFileSync(path.join(__dirname, \"../../bin/templates\", \"index.html\")).toString());"},{"number":77,"code":""},{"number":78,"code":"        this.projectName = config.projectName;"},{"number":79,"code":"        this.readme = config.readme;"},{"number":80,"code":""},{"number":81,"code":"        handlebars.registerHelper(\"md\", this.markdownHelper);"},{"number":82,"code":"        handlebars.registerHelper(\"ifCond\", this.ifCondHelper);"},{"number":83,"code":"    }"},{"number":84,"code":""},{"number":85,"code":""},{"number":86,"longComment":true,"comment":" !HtmlGenerator/generate"},{"number":87,"longComment":true,"comment":"## Generate HTML Docs"},{"number":88,"longComment":true,"comment":"Creates HTML docs for a set of file maps and reference maps set in @HtmlGenerator/constructor ."},{"number":89,"longComment":true,"comment":""},{"number":90,"code":"    public generate(): Q.IPromise<{}> {"},{"number":91,"code":"        return Q.Promise((resolve, reject) => {"},{"number":92,"code":"            logger.info(\"Generating HTML Documents\");"},{"number":93,"code":"            let that = this;"},{"number":94,"code":"            readFiles(parseLoc, {match: /.json$/, exclude: /internalReferences.json|externalReferences.json/, recursive: true}, (err, content, next) => {"},{"number":95,"code":"                that.proccessFile(err, content, next, that.outputDir);"},{"number":96,"code":"            }, (err, files) => {"},{"number":97,"code":"                that.generateIndexPage();"},{"number":98,"code":"                resolve(null);"},{"number":99,"code":"            });"},{"number":100,"code":""},{"number":101,"code":"            fse.copySync(path.join(this.projectPath, \"templates\", \"highlight.pack.js\"), path.join(this.outputDir, \"scripts/highlight.js\"));"},{"number":102,"code":"            fse.copySync(path.join(this.projectPath, \"templates\", \"css\", \"default.css\"), path.join(this.outputDir, \"css/default.css\"));"},{"number":103,"code":"        });"},{"number":104,"code":"    }"},{"number":105,"code":""},{"number":106,"longComment":true,"comment":" !HtmlGenerator/processFiles"},{"number":107,"longComment":true,"comment":"## Process Files"},{"number":108,"longComment":true,"comment":"Processes the file map for a file, making output decisions based on "},{"number":109,"longComment":true,"comment":"code, comment, long comment "},{"number":110,"longComment":true,"comment":""},{"number":111,"code":"    proccessFile(err: Error, content: string, next: Function, outputDir: string): void {"},{"number":112,"code":"        let file: IFile = JSON.parse(content);"},{"number":113,"code":"        logger.debug(\"Processing \" + file.name);"},{"number":114,"code":""},{"number":115,"code":""},{"number":116,"code":"        for (let i = 0; i < file.lines.length; i++) {"},{"number":117,"code":"            if (typeof(file.lines[i].comment) === \"string\" && file.lines[i].comment !== \"\" && file.lines[i].comment !== null) {"},{"number":118,"code":"                file.lines[i].comment = this.replaceAnchors(file.lines[i].comment, file.name, i);"},{"number":119,"code":"                file.lines[i].comment = this.replaceLinks(file.lines[i].comment, file.name, i);"},{"number":120,"code":"            }"},{"number":121,"code":"        }"},{"number":122,"code":""},{"number":123,"code":"        let outputMap = {"},{"number":124,"code":"            project: this.projectName,"},{"number":125,"code":"            items: [],"},{"number":126,"code":"            type: file.name,"},{"number":127,"code":"            name: file.type,"},{"number":128,"code":"            linkPrefix: this.getLinkPrefix(file.name)"},{"number":129,"code":"        };"},{"number":130,"code":""},{"number":131,"code":"         for (let i = 0; i < file.lines.length; i++) {"},{"number":132,"code":"            if (typeof(file.lines[i].comment) === \"string\" && file.lines[i].comment !== null) {"},{"number":133,"code":"                if (outputMap.items.length > 0 && outputMap.items[outputMap.items.length - 1].type === \"comment\") {"},{"number":134,"code":"                     outputMap.items[outputMap.items.length - 1].content +=  \"\\n\" + file.lines[i].comment;"},{"number":135,"code":"                } else {"},{"number":136,"code":"                     outputMap.items.push({content: file.lines[i].comment, type: \"comment\", longComment: file.lines[i].longComment || false });"},{"number":137,"code":"                }"},{"number":138,"code":"            }"},{"number":139,"code":""},{"number":140,"code":"            if (typeof(file.lines[i].code) === \"string\" && file.lines[i].code !== null) {"},{"number":141,"code":"                if (outputMap.items.length > 0 && outputMap.items[outputMap.items.length - 1].type === \"code\") {"},{"number":142,"code":"                     outputMap.items[outputMap.items.length - 1].content  +=  \"\\n\" + file.lines[i].code;"},{"number":143,"code":"                } else {"},{"number":144,"code":"                    outputMap.items.push({content: file.lines[i].code, type: \"code\", lang: file.type});"},{"number":145,"code":"                }"},{"number":146,"code":"            }"},{"number":147,"code":"         }"},{"number":148,"code":"        let output = this.template(outputMap);"},{"number":149,"code":""},{"number":150,"code":"        let filePathArray = path.join(outputDir, file.name + \".md\").split(\"/\");"},{"number":151,"code":"        filePathArray.pop();"},{"number":152,"code":"        let filePath = filePathArray.join(\"/\");"},{"number":153,"code":""},{"number":154,"code":"        mkdirp(filePath, function (err) {"},{"number":155,"code":"            if (err) {"},{"number":156,"code":"                logger.fatal(err.message);"},{"number":157,"code":"            }"},{"number":158,"code":"            else {"},{"number":159,"code":"                logger.debug(\"Saving output for \" + file.type + \" file \" + file.name + \" as \" + file.name + \".html\");"},{"number":160,"code":"                writeFileSync(path.join(outputDir, file.name + \".html\"), output, { flag: \"w\" });"},{"number":161,"code":"                next();"},{"number":162,"code":"            }"},{"number":163,"code":"        });"},{"number":164,"code":"    }"},{"number":165,"code":""},{"number":166,"longComment":true,"comment":" !HtmlGenerator/replaceAnchors"},{"number":167,"longComment":true,"comment":"## Replace Anchors"},{"number":168,"longComment":true,"comment":"Processes a comment line, replacing anchors with markdown anchor link tags"},{"number":169,"longComment":true,"comment":""},{"number":170,"code":"    replaceAnchors(comment: string,  fileName: string, line: number, position?: number) {"},{"number":171,"code":"        let pos = position || 0;"},{"number":172,"code":""},{"number":173,"comment":" Look at the line for anchors - replace them with links. ","code":"       "},{"number":174,"code":"        let match = XRegExp.exec(comment, this.anchorRegExp, pos, false);"},{"number":175,"code":""},{"number":176,"code":"        if (!match) {"},{"number":177,"code":"            return comment;"},{"number":178,"code":"        } else {"},{"number":179,"code":""},{"number":180,"code":"            let anchor = match[1].replace(\"/\", \"-\").toLowerCase();"},{"number":181,"code":"            let replacementText = '<a name=\"' + anchor + '\" id=\"' + anchor + '\" ></a>';"},{"number":182,"code":"            replacementText += \"[🔗](#\" + anchor + \")\";"},{"number":183,"code":""},{"number":184,"code":"            comment = comment.replace(match[0], replacementText);"},{"number":185,"code":"            return this.replaceAnchors(comment, fileName, line, pos + match[0].length);"},{"number":186,"code":"        }"},{"number":187,"code":"    }"},{"number":188,"code":""},{"number":189,"longComment":true,"comment":" !HtmlGenerator/replaceLinks"},{"number":190,"longComment":true,"comment":"## Replace Links"},{"number":191,"longComment":true,"comment":"Processes a comment line, replacing links with markdown links. "},{"number":192,"longComment":true,"comment":"This function calls itself recursively until all links are replaced."},{"number":193,"longComment":true,"comment":""},{"number":194,"code":"    replaceLinks(comment: string, fileName: string, line: number, position?: number) {"},{"number":195,"code":"        let pos = position || 0;"},{"number":196,"code":""},{"number":197,"code":"        let linkPrefix = this.getLinkPrefix(fileName);"},{"number":198,"code":""},{"number":199,"comment":" Look at the line for anchors - replace them with links. ","code":"       "},{"number":200,"code":"        let match = XRegExp.exec(comment, this.linkRegExp, pos, false);"},{"number":201,"code":""},{"number":202,"code":"        if (!match) {"},{"number":203,"code":"            return comment;"},{"number":204,"code":"        } else {"},{"number":205,"code":""},{"number":206,"comment":" Look external link.","code":"           "},{"number":207,"code":"            let tagArray = match[1].split(\"/\");"},{"number":208,"code":"            let externalTag =  _.findWhere(this.externalReferences, {anchor: tagArray[0]});"},{"number":209,"code":"            if (externalTag) {"},{"number":210,"code":"                logger.debug(\"found external link: \" + match[1]);"},{"number":211,"code":"                let anchor = match[1].replace(\"/\", \"-\").toLowerCase();"},{"number":212,"code":"                comment = comment.replace(match[0], \" [\" + match[1] + \"](\" + externalTag.path + \") \");"},{"number":213,"code":"                return this.replaceLinks(comment, fileName, line, pos + match[0].length);"},{"number":214,"code":"            }"},{"number":215,"code":""},{"number":216,"comment":" Look for internal link.","code":"           "},{"number":217,"code":"            let internalTag =  _.findWhere(this.tags, {anchor: match[1]});"},{"number":218,"code":"            if (!internalTag) {"},{"number":219,"code":"                logger.warn(\"link: \" + match[1] + \" in \" + fileName + \":\" + line + \":\" + pos + \" does not have a cooresponding anchor, so link cannot be created.\");"},{"number":220,"code":"                return comment;"},{"number":221,"code":"            } else {"},{"number":222,"code":"                logger.debug(\"found internal link: \" + match[1] + \" \" + internalTag.path);"},{"number":223,"code":"                let anchor = match[1].replace(\"/\", \"-\").toLowerCase();"},{"number":224,"code":"                comment = comment.replace(match[0], \" [\" + match[1] + \"](\" + linkPrefix + internalTag.path + \".md#\" + anchor + \")\");"},{"number":225,"code":"            }"},{"number":226,"code":"            return this.replaceLinks(comment, fileName, line, pos + match[0].length);"},{"number":227,"code":"        }"},{"number":228,"code":"    }"},{"number":229,"code":""},{"number":230,"longComment":true,"comment":" !HtmlGenerator/generateIndexPage"},{"number":231,"longComment":true,"comment":"## Generates the \"Index Page\""},{"number":232,"longComment":true,"comment":"This generates the index page, listing all the link collections, "},{"number":233,"longComment":true,"comment":"and sucks in the user's defined README. "},{"number":234,"longComment":true,"comment":""},{"number":235,"code":"    generateIndexPage(): void {"},{"number":236,"code":"        logger.info(\"generating index.html\");"},{"number":237,"code":"        let that = this;"},{"number":238,"code":""},{"number":239,"code":"        let outputMap = {"},{"number":240,"code":"            project: this.projectName,"},{"number":241,"code":"            collections: [],"},{"number":242,"code":"            files: [],"},{"number":243,"code":"            readme: \"\""},{"number":244,"code":"        };"},{"number":245,"code":""},{"number":246,"comment":" collections","code":"       "},{"number":247,"code":"        let collections = that.referenceCollection.getTagsByCollection();"},{"number":248,"code":""},{"number":249,"code":"        for (let i = 0; i < collections.length; i++) {"},{"number":250,"code":"            let anchors = _.clone(collections[i].anchors);"},{"number":251,"code":"            let name = collections[i].name.split(\"/\");"},{"number":252,"code":"            name.shift();"},{"number":253,"code":"            name.shift();"},{"number":254,"code":"            name = name.join(\"/\");"},{"number":255,"code":""},{"number":256,"code":"            for (let x = 0; x < anchors.length; x++) {"},{"number":257,"code":"                let anchor = anchors[x].linkStub.replace(\"/\", \"-\").toLowerCase();"},{"number":258,"code":"                anchors[x].path = anchors[x].path + \".html#\";"},{"number":259,"code":"                if (name !== \"\") {"},{"number":260,"code":"                    anchors[x].path += name.replace(\"/\", \"-\").toLowerCase() + \"-\";"},{"number":261,"code":"                }"},{"number":262,"code":""},{"number":263,"code":"                anchors[x].path += anchor;"},{"number":264,"code":"            }"},{"number":265,"code":""},{"number":266,"code":"            outputMap.collections.push({"},{"number":267,"code":"                name: name,"},{"number":268,"code":"                anchors: anchors"},{"number":269,"code":"            });"},{"number":270,"code":"        }"},{"number":271,"code":""},{"number":272,"code":"        files(this.outputDir, (error, files) => {"},{"number":273,"comment":" Files","code":"           "},{"number":274,"code":"            for (let i = 0; i < files.length; i++) {"},{"number":275,"code":"                let fileNameArray = files[i].split(\".\");"},{"number":276,"code":"                let extension = fileNameArray[fileNameArray.length - 1];"},{"number":277,"code":"                if (extension === \"html\") {"},{"number":278,"code":"                    let pathArray: string[] = files[i].split(\"/\");"},{"number":279,"comment":" shift the output dir off the file name.","code":"                    pathArray.shift();"},{"number":280,"code":"                    let path = pathArray.join(\"/\");"},{"number":281,"code":"                    outputMap.files.push({path: path});"},{"number":282,"code":"                }"},{"number":283,"code":"            }"},{"number":284,"code":""},{"number":285,"code":"            if (this.readme !== null) {"},{"number":286,"code":"                outputMap.readme = readFileSync(that.readme).toString();"},{"number":287,"code":"            }"},{"number":288,"code":"            let output = this.indexTemplate(outputMap);"},{"number":289,"code":"            writeFileSync(path.join(that.outputDir, \"index.html\"), output, { flag: \"w\" });"},{"number":290,"code":"        });"},{"number":291,"code":"    }"},{"number":292,"code":""},{"number":293,"longComment":true,"comment":" !HtmlGenerator/getLinkPrefix"},{"number":294,"longComment":true,"comment":"Generate a link Prefix from a fileName"},{"number":295,"longComment":true,"comment":"> NOTE: Without this code, links will not properly navigated to deeply nested pages with relative linking."},{"number":296,"longComment":true,"comment":""},{"number":297,"code":"    getLinkPrefix(fileName: string): string {"},{"number":298,"code":"        let fileNameAsArray = fileName.split(\"/\");"},{"number":299,"code":"        let linkPrefix = \"\";"},{"number":300,"code":"        for (let i = 0; i < fileNameAsArray.length - 2; i++) {"},{"number":301,"code":"            linkPrefix += \"../\";"},{"number":302,"code":"        }"},{"number":303,"code":""},{"number":304,"code":"        return linkPrefix;"},{"number":305,"code":"    }"},{"number":306,"code":""},{"number":307,"comment":" ## Handlebars Template Helpers","code":"   "},{"number":308,"code":""},{"number":309,"longComment":true,"comment":" HtmlGenerator/markdownHelper"},{"number":310,"longComment":true,"comment":"Handlebars Template helper - renders MD in template view."},{"number":311,"longComment":true,"comment":""},{"number":312,"code":"    markdownHelper(context, options) {"},{"number":313,"code":"       return marked(context);"},{"number":314,"code":"    }"},{"number":315,"code":""},{"number":316,"longComment":true,"comment":" HtmlGenerator/ifCondHelper"},{"number":317,"longComment":true,"comment":"Handlebars Template helper - provides if confition logic for template view."},{"number":318,"longComment":true,"comment":""},{"number":319,"code":"    ifCondHelper(v1, v2, options) {"},{"number":320,"code":"        if (v1 === v2) {"},{"number":321,"code":"            return options.fn(this);"},{"number":322,"code":"        }"},{"number":323,"code":"        return options.inverse(this);"},{"number":324,"code":"    };"},{"number":325,"code":"}"}],"type":"typescript"}